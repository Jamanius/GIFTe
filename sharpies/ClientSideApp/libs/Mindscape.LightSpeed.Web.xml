<?xml version="1.0"?>

<doc>
  <assembly>
    <name>Mindscape.LightSpeed.Web</name>
  </assembly>
  <members>
    <member name="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilterType">
      <summary>
        Defines what type of filter will be applied for an instance of a LightSpeedEntityModelBinderFilter
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilterType.StartsWith">
      <summary>
        Indicates that the filter should compare if the string value starts with the filter value
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilterType.EndsWith">
      <summary>
        Indicates that the filter should compare if the string value ends with the filter value
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter">
      <summary>
        A filter which will be applied to model binding errors in the LightSpeedEntityModelBinder
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter.#ctor(Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilterType,System.String)">
      <summary>
        Creates an instance of a model binder filter
      </summary>
      <param name="filterType">The filter type to be used</param>
      <param name="value">The value which will be compared to</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter.IsMatch(System.String)">
      <summary>
        Indicates if the filter matches the supplied value
      </summary>
      <param name="matchValue">The value to be compared against the filter</param>
      <returns>True if the filter matches the match value otherwise False</returns>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter.FilterType">
      <summary>
        The filter type to be used
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter.Value">
      <summary>
        The value which will be compared to
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingValidationEventArgs">
      <summary>
        Event arguments used for events where we are dealing with validation results from a data binding operation
        for the <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder">EntityDataBinder</see>
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingValidationEventArgs.DataBindingItem">
      <summary>
        Gets or sets the data binding item.
      </summary>
      <value>The data binding item.</value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingValidationEventArgs.IsValid">
      <summary>
        Gets or sets a value indicating whether this instance is valid.
      </summary>
      <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.IEntityDataBinder">
      <summary>
        Provides a two way data binding control which allows you to bind entities to and from form
        controls for an ASP.NET web form
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.IEntityDataBinder.BindingItem">
      <summary>
        Gets the binding item.
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.RequiredFieldException">
      <summary>
        An exception that is thrown when a required value is blank during validation
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingException">
      <summary>
        An exception which is thrown when an error occurs with an
        <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder" /> operation.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingException.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingException" />
        class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingException.#ctor(System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingException" />
        class.
      </summary>
      <param name="Message">The message.</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.RequiredFieldException.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.WebForms.RequiredFieldException" />
        class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.RequiredFieldException.#ctor(System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.WebForms.RequiredFieldException" />
        class.
      </summary>
      <param name="Message">The message.</param>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder">
      <summary>
        Provides a two way data binding control which allows you to bind entities to and from form
        controls for an ASP.NET web form
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder" /> class.
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.DesignMode">
      <summary>
        Indicates if the control is currently in design mode
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.DataBind">
      <summary>
        Binds the controls that are attached to this DataBinder.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.DataBind(System.Web.UI.Control)">
      <summary>
        Binds data of the specified controls into the specified BindingSource
      </summary>
      <param name="Container">The top level container that is bound</param>
      <returns>True if the databinding operation succeeded otherwise false</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.Unbind">
      <summary>
        Unbind the controls back into their underlying binding sources. Returns true on success
        false on failure. On failure the BindingErrors collection will be set
      </summary>
      <returns>True if there are no errors. False if unbinding failed. Check the BindingErrors for errors.</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.Unbind(System.Web.UI.Control)">
      <summary>
        Unbind the controls back into their binding source. Returns true on success
        false on failure. On failure the BindingErrors collection will be set
      </summary>
      <param name="Container">The top level container Control that is bound.</param>
      <returns>True if there are no errors. False if unbinding failed. Check the BindingErrors for errors.</returns>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.AddBinding(System.Web.UI.Control,System.String,System.Object,System.String)">
      <summary>
        Adds a binding to the control. This method is a simple
        way to establish a binding.

        Returns the Item so you can customize properties further
      </summary>
      <param name="ControlToBind">The control which is to be bound on the WebForm</param>
      <param name="ControlPropertyToBind">The property on the control which is to be bound by the DataBinder</param>
      <param name="SourceObjectToBindTo">The object which is to be bound from your model or code behind file</param>
      <param name="SourceMemberToBindTo">The property on the object which is to be bound by the DataBinder</param>
      <returns>An EntityDataBindingItem instance which describes the binding between WebForm control and source object</returns>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.AddBinding(System.Web.UI.Control,System.String,System.String,System.String)">
      <summary>
        Adds a binding to the control. This method is a simple
        way to establish a binding.

        Returns the Item so you can customize properties further
      </summary>
      <param name="ControlToBind">The control which is to be bound on the WebForm</param>
      <param name="ControlPropertyToBind">The property on the control which is to be bound by the DataBinder</param>
      <param name="SourceObjectNameToBindTo">The object which is to be bound from your model or code behind file</param>
      <param name="SourceMemberToBindTo">The property on the object which is to be bound by the DataBinder</param>
      <returns>An EntityDataBindingItem instance which describes the binding between WebForm control and source object</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.AddBinding(System.Web.UI.Control)">
      <summary>
        This method only adds a data binding item, but doesn't bind it
        to anything. This can be useful for only displaying errors
      </summary>
      <param name="ControlToBind">The control which is to be bound on the WebForm</param>
      <returns>An EntityDataBindingItem which describes the binding to a control on a WebForm</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.LoadFromControls(System.Web.UI.Control)">
      <summary>
        Picks up all controls on the form that implement the IWebDataBinder interface
        and adds them to the DataBindingItems Collection
      </summary>
      <param name="Container">The container which contains the controls which are to be inspected</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.LoadDataBoundControls(System.Web.UI.Control)">
      <summary>
        Loop through all of the contained controls of the form and
        check for all that implement IWebDataBinder. If found
        add the BindingItem to this Databinder
      </summary>
      <param name="Container">The container which contains the controls which are to be inspected</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.OnValidateControl(Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem)">
      <summary>
        Fires the ValidateControlEvent
      </summary>
      <param name="Item">The EntityDataBindingItem which is to be validated</param>
      <returns>false - Validation for control failed and a BindingError is added, true - Validation succeeded</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.CanExtend(System.Object)">
      <summary>
        Specifies whether this object can provide its extender properties to the specified object.
      </summary>
      <param name="extendee">The <see cref="T:System.Object" /> to receive the extender properties.</param>
      <returns>
        true if this object can provide extender properties to the specified object; otherwise, false.
      </returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.GetDataBindingItem(System.Web.UI.Control)">
      <summary>
        Returns a specific DataBinding Item for a given control.
        Always returns an item even if the Control is not found.
        If you need to check whether this is a valid item check
        the BindingSource property for being blank.

        Extender Property Get method
      </summary>
      <param name="control">The control which we wish to return an EntityDataBindingItem for</param>
      <returns>The EntityDataBindingItem which is related to the control, this will be returned from BindingItems if an entry already exists</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.GetDataBindingItem(System.String)">
      <summary>
        Return a specific databinding item for a give control id.
        Note unlike the ControlInstance version return null if the
        ControlId isn't found.
      </summary>
      <param name="ControlId">The control identifier which we wish to return an EntityDataBindingItem for</param>
      <returns>The EntityDataBindingItem which is related to the control or null if no matching item is found</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.NotifyDesigner">
      <summary>
        this method is used to ensure that designer is notified
        every time there is a change in the sub-ordinate validators
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.BindingItems">
      <summary>
        Gets the binding items.
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.AutoLoadDataBoundControls">
      <summary>
        Automatically imports all controls on the form that implement the IWebDataBinder interface and adds them to the DataBinder
      </summary>
      <value>
        <c>true</c> if [auto load data bound controls]; otherwise, <c>false</c>.
      </value>
    </member>
    <member name="E:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.ValidateControl">
      <summary>
        Event that can be hooked to validate each control after it's been unbound.
        Allows for doing application level validation of the data once it's been
        returned.

        This method receives a WebDataBindingItem parameter which includes a
        reference to both the control and the DataSource object where you can check
        values. Return false from the event method to indicate that validation
        failed which causes a new BindingError to be created and added to the
        BindingErrors collection.
      </summary>
    </member>
    <member name="E:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.BeforeBindControl">
      <summary>
        Fired just before the control is bound. You can return false from the
        handler to cause the control to not be bound
      </summary>
    </member>
    <member name="E:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.AfterBindControl">
      <summary>
        Fires immediately after the control has been bound. You can check for
        errors or perform additional validation.
      </summary>
    </member>
    <member name="E:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.BeforeUnbindControl">
      <summary>
        Fires immediately before unbinding of a control takes place.
        You can return false to abort DataUnbinding
      </summary>
    </member>
    <member name="E:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder.AfterUnbindControl">
      <summary>
        Fires immediately after binding is complete. You can check for errors
        and take additional action.
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.ItemResultNotification">
      <summary>
        Delegate for events raised relating to entity data binding items
      </summary>
      <param name="item">The data binding item involved</param>
      <returns>An indicator if the operation succeeded</returns>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.ItemNotification">
      <summary>
        Delegate for events raised relating to entity data binding items
      </summary>
      <param name="item">The data binding item involved</param>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.DataBindingItemValidate">
      <summary>
        Delegate for events relating to validation.
      </summary>
      <param name="sender">The sender.</param>
      <param name="e">
        The <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingValidationEventArgs" />
        instance containing the event data.
      </param>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.WebDataBinderDesigner">
      <summary>
        Control designer used so we get a grey button display instead of the
        default label display for the control.
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.BindingMode">
      <summary>
        Enumeration which specifies how binding should be handled for a given
        <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem" />
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.WebForms.BindingMode.TwoWay">
      <summary>
        Databinding occurs for DataBind() and Unbind()
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.WebForms.BindingMode.OneWay">
      <summary>
        DataBinding occurs for DataBind() only
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.WebForms.BindingMode.None">
      <summary>
        No binding occurs
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem">
      <summary>
        An individual data binding item that allows you to bind a source binding source - a database field or Object property typically - to a target control property
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.DesignMode">
      <summary>
        Indicates if the control is in design mode
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem" />
        class.
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.#ctor(Mindscape.LightSpeed.Web.WebForms.EntityDataBinder)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem" />
        class.
      </summary>
      <param name="Parent">The parent.</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.OnValidate">
      <summary>
        Fires the Validation Event
      </summary>
      <returns>true if the item was successfully validated otherwise false</returns>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.DataBind">
      <summary>
        Binds a source object and property to a control's property. For example
        you can bind a business object to a the text property of a text box, or
        a DataRow field to a text box field. You specify a binding source object
        (Customer.Entity or Customer.DataRow) and property or field(Company, FirstName)
        and bind it to the control and the property specified (Text).
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.DataBind(System.Web.UI.Control)">
      <summary>
        Binds a source object and property to a control's property. For example
        you can bind a business object to a the text property of a text box, or
        a DataRow field to a text box field. You specify a binding source object
        (Customer.Entity or Customer.DataRow) and property or field(Company, FirstName)
        and bind it to the control and the property specified (Text).
      </summary>
      <param name="WebPage">the Base control that binding source objects are attached to</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.Unbind">
      <summary>
        Unbinds control properties back into the control source.

        This method uses reflection to lift the data out of the control, then
        parses the string value back into the type of the data source. If an error
        occurs the exception is not caught internally, but generally the
        FormUnbindData method captures the error and assigns an error message to
        the BindingErrorMessage property of the control.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.Unbind(System.Web.UI.Control)">
      <summary>
        Unbinds the specified web page.
      </summary>
      <param name="WebPage">The web page.</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.ToString">
      <summary>
        Returns a path description for the controls binding source and binding source member
      </summary>
      <returns>A path description in the syntax of Source.Member</returns>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.Binder">
      <summary>
        Gets or sets the associated <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder" />
      </summary>
      <value>
        The <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinder" />.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.TargetControl">
      <summary>
        Gets or sets the ID of the control to that is bound
      </summary>
      <value>
        The target control.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.TargetControlProperty">
      <summary>
        Gets or sets the property that is bound on the target control
      </summary>
      <value>
        The target control property.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.DataSourceTextField">
      <summary>
        Gets or sets the Property to use for the TextField when using DataSource binding
      </summary>
      <value>
        The data source text field.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.DataSourceValueField">
      <summary>
        The Property to use for the ValueField when using DataSource binding
      </summary>
      <value>
        The data source value field.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.TargetControlInstance">
      <summary>
        Gets or sets the target control instance.
      </summary>
      <value>
        The target control instance.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.BindingSource">
      <summary>
        Gets or sets the binding source.
      </summary>
      <value>
        The binding source.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.BindingSourceMember">
      <summary>
        Gets or sets the binding source member.
      </summary>
      <value>
        The binding source member.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.BindingSourceObject">
      <summary>
        Gets or sets the binding source object.
      </summary>
      <value>
        The binding source object.
      </value>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.DisplayFormat">
      <summary>
        Format Expression ( {0:c) ) applied to the binding source when it's displayed.
        Watch out for two way conversion issues when formatting this way. If you create
        expressions and you are also saving make sure the format used can be saved back.
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.IsRequired">
      <summary>
        If set requires that the control contains a value, otherwise a validation error is thrown
        Useful mostly on TextBox controls only.
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.FriendlyName">
      <summary>
        A descriptive name for the field used for error display
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.BindingMode">
      <summary>
        Determines how databinding and unbinding is done on the target control.
        One way only fires DataBind() and ignores Unbind() calls.
        Two-way does both. None effectively turns off binding.
      </summary>
    </member>
    <member name="E:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.Validate">
      <summary>
        Use this event to hook up special validation logic. Called after binding completes. Return false to indicate validation failed
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.ID">
      <summary>
        Gets or sets the programmatic identifier assigned to the server control.
      </summary>
      <returns>
        The programmatic identifier assigned to the control.
      </returns>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.Visible">
      <summary>
        Gets or sets a value that indicates whether a server control is rendered as UI on the page.
      </summary>
      <returns>
        true if the control is visible on the page; otherwise false.
      </returns>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem.EnableViewState">
      <summary>
        Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.
      </summary>
      <returns>
        true if the server control maintains its view state; otherwise false. The default is true.
      </returns>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection">
      <summary>
        Collection of individual DataBindingItems. Implemented explicitly as
        a CollectionBase class rather than using List#WebDataBindingItems#
        so that Add can be overridden
      </summary>
    </member>
    <member name="F:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection._binder">
      <summary>
        Internal reference to the EntityDataBinder object
        that is passed to the individual items if available
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection.#ctor(Mindscape.LightSpeed.Web.WebForms.EntityDataBinder)">
      <summary>
        Preferred Constructor - Add a reference to the EntityDataBinder object here
        so a reference can be passed to the children.
      </summary>
      <param name="binder">The EntityDataBinder which is associated with this collection to be assigned to its children</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection.#ctor">
      <summary>
        Not the preferred constructor - If possible pass a reference to the
        Binder object in the overloaded version.
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection.Add(Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem)">
      <summary>
        Add a EntityDataBindingItem to the collection
      </summary>
      <param name="item">The item which is to be added to the collection</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection.AddAt(System.Int32,Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItem)">
      <summary>
        Add a EntityDataBindingItem to the collection
      </summary>
      <param name="index">The index in the collection which the item be added at</param>
      <param name="item">The item to be added to the collection</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection.UpdateListInDesignMode">
      <summary>
        We have to delete 'empty' items because the designer requires items to be
        added to the collection just for editing. This way we may have one 'extra'
        item, but not a whole long list of items.
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.WebForms.EntityDataBindingItemCollection.Item(System.Int32)">
      <summary>
        Public indexer for the Items
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinderValidationException">
      <summary>
        Describes an exception which has occured as part of a databinding operations with the
        <see ref="EntityDataBinder">EntityDataBinder</see>.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinderValidationException.#ctor">
      <summary>
        Initializes a new instance of the
        <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinderValidationException" /> class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.WebForms.EntityDataBinderValidationException.#ctor(System.String)">
      <summary>
        Initializes a new instance of the
        <see cref="T:Mindscape.LightSpeed.Web.WebForms.EntityDataBinderValidationException" /> class.
      </summary>
      <param name="Message">The message.</param>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.DataAnnotations.DataAnnotationBuilder">
      <summary>
        Translates LightSpeed validation attributes to DataAnnotations attributes.
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.DataAnnotations.DataAnnotationBuilder.GetDataAnnotations(System.ComponentModel.PropertyDescriptor)">
      <summary>
        Translates LightSpeed validation attributes to DataAnnotations attributes for a property
        represented by a <see cref="T:System.ComponentModel.PropertyDescriptor" />.
      </summary>
      <param name="descriptor">The property for which DataAnnotations attributes are required.</param>
      <returns>The DataAnnotations attributes for the specified property.</returns>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.DataAnnotations.DataAnnotationBuilder.GetDataAnnotations(System.Type,System.String)">
      <summary>
        Translates LightSpeed validation attributes to DataAnnotations attributes for a property
        represented by a type and name.
      </summary>
      <param name="entityType">The type of LightSpeed entity.</param>
      <param name="propertyName">The property for which DataAnnotations attributes are required.</param>
      <returns>The DataAnnotations attributes for the specified property.</returns>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.DataAnnotations.DataAnnotationBuilder.GetDataAnnotations(System.Type,System.String,System.String)">
      <summary>
        Translates LightSpeed validation attributes to DataAnnotations attributes for a property
        represented by a type and name.
      </summary>
      <param name="entityType">The type of LightSpeed entity.</param>
      <param name="propertyName">The property for which DataAnnotations attributes are required.</param>
      <param name="displayName">The name to be displayed for the property in validation error messages.</param>
      <returns>The DataAnnotations attributes for the specified property.</returns>
    </member>
    <member name="T:Mindscape.LightSpeed.DataAnnotations.EntityDataAnnotationProvider">
      <summary>
        Maps LightSpeed validation attributes to DataAnnotations attributes.
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.DataAnnotations.EntityDataAnnotationProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
      <summary>
        Initializes a new instance of the
        <see cref="T:Mindscape.LightSpeed.DataAnnotations.EntityDataAnnotationProvider" /> class.
      </summary>
      <param name="innerProvider">An optional provider with which to compose the EntityDataAnnotationProvider.</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.DataAnnotations.EntityDataAnnotationProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary>
        Gets a custom type descriptor for the given type and object.
      </summary>
      <param name="objectType">The type of object.</param>
      <param name="instance">An instance of the type.</param>
      <returns>A type descriptor that can provide metadata for the type.</returns>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedControllerBase`1">
      <summary>
        Provides a base implementation of an ASP.NET MVC controller which provides a LightSpeed UnitOfWork instance
        through the PerRequestUnitOfWorkScope.
      </summary>
      <remarks>
        By default this controller will dispose of the UnitOfWork instance as part of the ResultExecuted event,
        if you do not want this behavior then disable DisposeUnitOfWorkOnResultExecuted and provide
        a manual implementation for disposal as required.
      </remarks>
      <typeparam name="TUnitOfWork">The type of the IUnitOfWork held by this controller.</typeparam>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedControllerBase`1.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>
        Called after the action result that is returned by an action method is executed.
      </summary>
      <param name="filterContext">Information about the current request and action result</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedControllerBase`1.Dispose(System.Boolean)">
      <summary>
        Releases all resources that are used by the current instance of the <see cref="T:System.Web.Mvc.Controller" />
        class.
      </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Mvc.LightSpeedControllerBase`1.LightSpeedContext">
      <summary>
        Returns an instance of the LightSpeedContext object which will be used to create any
        UnitOfWork instances used by this controller
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Mvc.LightSpeedControllerBase`1.UnitOfWork">
      <summary>
        Returns the current UnitOfWork instance which is being held
      </summary>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Mvc.LightSpeedControllerBase`1.DisposeUnitOfWorkOnResultExecuted">
      <summary>
        Indicates if the controller should handle disposal of the UnitOfWork instance as part of the
        ResultExecuted handler. By default this is enabled.
      </summary>
      <remarks>
        If you do not use DisposeUnitOfWorkOnResultExecuted you must write your own disposal
        logic for the UnitOfWorkScope for example as part of Global.asax hooking the EndRequest event.

        An example of this would be:

        protected void Application_Start(object sender, EventArgs e)
        {
        EndRequest += new EventHandler(OnEndRequest);
        }

        void OnEndRequest(object sender, EventArgs e)
        {
        var scope = new PerRequestUnitOfWorkScope[TUnitOfWork](LightSpeedContext);

        if (scope.HasCurrent)
        {
        scope.Current.Dispose();
        }
        }
      </remarks>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder">
      <summary>
        An Mvc ModelBinder which handles the binding of LightSpeed Entity types from a form POST
      </summary>
      <remarks>
        Currently associations are not handled by this ModelBinder
      </remarks>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder" />
        class.
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.#ctor(Mindscape.LightSpeed.IEntityFactory)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder" />
        class.
      </summary>
      <param name="entityFactory">The IEntityFactory which will be used to initialize entities</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.#ctor(Mindscape.LightSpeed.IEntityFactory,System.Collections.Generic.List{Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter})">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder" />
        class.
      </summary>
      <param name="entityFactory">The IEntityFactory which will be used to initialize entities</param>
      <param name="filters">The filters which will be used to filter error messages</param>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.Register(System.Reflection.Assembly)">
      <summary>
        Registers all LightSpeed entity types in the given assembly to be handled by this ModelBinder
      </summary>
      <param name="assembly">The assembly containing LightSpeed entity types which are to be registered.</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.Register(System.Reflection.Assembly,Mindscape.LightSpeed.IEntityFactory)">
      <summary>
        Registers all LightSpeed entity types in the given assembly to be handled by this ModelBinder
      </summary>
      <param name="assembly">The assembly containing LightSpeed entity types which are to be registered.</param>
      <param name="entityFactory">The IEntityFactory which will be used to create entity instances</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.Register(System.Reflection.Assembly,System.Collections.Generic.List{Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter})">
      <summary>
        Registers all LightSpeed entity types in the given assembly to be handled by this ModelBinder
      </summary>
      <param name="assembly">The assembly containing LightSpeed entity types which are to be registered.</param>
      <param name="filters">The filters which will be used to filter error messages</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.Register(System.Reflection.Assembly,Mindscape.LightSpeed.IEntityFactory,System.Collections.Generic.List{Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinderFilter})">
      <summary>
        Registers all LightSpeed entity types in the given assembly to be handled by this ModelBinder
      </summary>
      <param name="assembly">The assembly containing LightSpeed entity types which are to be registered.</param>
      <param name="entityFactory">The IEntityFactory which will be used to create entity instances</param>
      <param name="filters">The filters which will be used to filter error messages</param>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedEntityModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>
        Binds the model to a value by using the specified controller context and binding context.
      </summary>
      <param name="controllerContext">The controller context.</param>
      <param name="bindingContext">The binding context.</param>
      <returns>
        The entity with values bound from the form.
      </returns>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Mvc.LightSpeedMvcValidatorProvider">
      <summary>
        A custom ValidatorProvider which performs the translation between LightSpeed validation attributes
        and DataAnnotation attributes for use with ASP.NET MVC 2+
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Mvc.LightSpeedMvcValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>
        Gets a list of validators.
      </summary>
      <param name="metadata">The metadata.</param>
      <param name="context">The context.</param>
      <param name="attributes">The list of validation attributes.</param>
      <returns>
        A list of validators.
      </returns>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.EnsureSecureConstraint">
      <summary>
        Routing constraint which forces a route to be requested under a secure connection and will redirect
        to a secure connection if otherwise requested
      </summary>
    </member>
    <member
      name="M:Mindscape.LightSpeed.Web.Routing.EnsureSecureConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>
        Determines whether the URL parameter contains a valid value for this constraint.
      </summary>
      <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
      <param name="route">The object that this constraint belongs to.</param>
      <param name="parameterName">The name of the parameter that is being checked.</param>
      <param name="values">An object that contains the parameters for the URL.</param>
      <param name="routeDirection">An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.</param>
      <returns>
        true if the URL parameter contains a valid value; otherwise, false.
      </returns>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.WebContractRouteBuilder">
      <summary>
        Helper class which is used by the WebContractBuilder for generating routes
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.WebContractAttribute">
      <summary>
        Declares that this class or interface specifies a contract to be bound for web request routing
        and that its operations should be inspected to build appropriate routes.
      </summary>
      <remarks>
        The RootPath property is used as the base for any routes build underneath this contract.
      </remarks>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.WebContractAttribute.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.WebContractAttribute" /> class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.WebContractAttribute.#ctor(System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.WebContractAttribute" /> class.
      </summary>
      <param name="rootPath">The root path used when building the routes.</param>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.WebContractAttribute.RootPath">
      <summary>
        Returns the URL format which has been specified against this
        <see cref="T:Mindscape.LightSpeed.Web.Routing.WebContractAttribute" /> instance.
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.GetAttribute">
      <summary>
        Describes a GET based route to be applied to an action.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.GetAttribute.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.GetAttribute" /> class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.GetAttribute.#ctor(System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.GetAttribute" /> class.
      </summary>
      <param name="name">Name of the action.</param>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.GetAttribute.Name">
      <summary>
        The name which should be used to describe the action in terms of the route.
      </summary>
      <value>
        The name of the action.
      </value>
      <example>
        An action called Bar with the Name of Foo would cause a route called /foo to be built.
        If there is no name set then the route would be called /bar
      </example>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.GetAttribute.Secure">
      <summary>
        Gets or sets a value indicating whether this <see cref="T:Mindscape.LightSpeed.Web.Routing.GetAttribute" /> is secure.
      </summary>
      <value>
        <c>true</c> if secure; otherwise, <c>false</c>.
      </value>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.PostAttribute">
      <summary>
        Describes a POST based route to be applied to an action.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.PostAttribute.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.PostAttribute" /> class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.PostAttribute.#ctor(System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.PostAttribute" /> class.
      </summary>
      <param name="name">Name of the action.</param>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.PostAttribute.Name">
      <summary>
        The name which should be used to describe the action in terms of the route.
      </summary>
      <value>
        The name of the action.
      </value>
      <example>
        An action called Bar with the Name of Foo would cause a route called /foo to be built.
        If there is no name set then the route would be called /bar
      </example>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.PostAttribute.Secure">
      <summary>
        Gets or sets a value indicating whether this <see cref="T:Mindscape.LightSpeed.Web.Routing.PostAttribute" /> is secure.
      </summary>
      <value>
        <c>true</c> if secure; otherwise, <c>false</c>.
      </value>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.PutAttribute">
      <summary>
        Describes a PUT based route to be applied to an action.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.PutAttribute.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.PutAttribute" /> class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.PutAttribute.#ctor(System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.PutAttribute" /> class.
      </summary>
      <param name="name">Name of the action.</param>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.PutAttribute.Name">
      <summary>
        The name which should be used to describe the action in terms of the route.
      </summary>
      <value>
        The name of the action.
      </value>
      <example>
        An action called Bar with the Name of Foo would cause a route called /foo to be built.
        If there is no name set then the route would be called /bar
      </example>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.PutAttribute.Secure">
      <summary>
        Gets or sets a value indicating whether this <see cref="T:Mindscape.LightSpeed.Web.Routing.PutAttribute" /> is secure.
      </summary>
      <value>
        <c>true</c> if secure; otherwise, <c>false</c>.
      </value>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.DeleteAttribute">
      <summary>
        Describes a DELETE based route to be applied to an action.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.DeleteAttribute.#ctor">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.DeleteAttribute" /> class.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.DeleteAttribute.#ctor(System.String)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.DeleteAttribute" /> class.
      </summary>
      <param name="name">Name of the action.</param>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.DeleteAttribute.Name">
      <summary>
        The name which should be used to describe the action in terms of the route.
      </summary>
      <value>
        The name of the action.
      </value>
      <example>
        An action called Bar with the Name of Foo would cause a route called /foo to be built.
        If there is no name set then the route would be called /bar
      </example>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.DeleteAttribute.Secure">
      <summary>
        Gets or sets a value indicating whether this <see cref="T:Mindscape.LightSpeed.Web.Routing.DeleteAttribute" />
        is secure.
      </summary>
      <value>
        <c>true</c> if secure; otherwise, <c>false</c>.
      </value>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.UrlStemAttribute">
      <summary>
        Describes that a parameter for the action is to form part of the stem leading up to the action itself.
      </summary>
      <example>
        Given an action with the signature: ActionResult Bar(string foo);
        The default for this would be /bar
        If [UrlStem] is applied to the parameter foo then the resulting route would be /[foo]/bar
      </example>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.UrlStemSuffixAttribute">
      <summary>
        Describes that a parameter for the action is to form part of the stem following the action itself.
      </summary>
      <example>
        Given an action with the signature: ActionResult Bar(string foo);
        The default for this would be /bar
        If [UrlStemSuffix] is applied to the parameter foo then the resulting route would be /bar/[foo]
      </example>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.OptionalUrlStemSuffixAttribute">
      <summary>
        Describes that a parameter for the action is to form part of the stem following the action itself.
        This parameter can be optional which allows for a route where no parameter is supplied.
      </summary>
      <example>
        Given an action with the signature: ActionResult Bar(string foo);
        The default for this would be /bar
        If [UrlStemSuffix] is applied to the parameter foo then the resulting routes created would would be
        /bar and /bar/[foo]
      </example>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.DefaultValueAttribute">
      <summary>
        Describes a default value which can be supplied to the parameter.
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.DefaultValueAttribute.#ctor(System.Object)">
      <summary>
        Initializes a new instance of the <see cref="T:Mindscape.LightSpeed.Web.Routing.DefaultValueAttribute" />
        class.
      </summary>
      <param name="value">The value.</param>
    </member>
    <member name="P:Mindscape.LightSpeed.Web.Routing.DefaultValueAttribute.Value">
      <summary>
        Gets the value.
      </summary>
    </member>
    <member name="T:Mindscape.LightSpeed.Web.Routing.WebContractBuilder">
      <summary>
        Builds routing for any WebContract definitions which have been specified in a given assembly
      </summary>
    </member>
    <member name="M:Mindscape.LightSpeed.Web.Routing.WebContractBuilder.BuildFromAssembly(System.Reflection.Assembly)">
      <summary>
        Builds routing for any WebContract definitions which have been specified in the given assembly
      </summary>
      <param name="assembly">The assembly which contains the WebContract definitions.</param>
      <returns><c>true</c> if the routing was successfully built else <c>false</c></returns>
    </member>
  </members>
</doc>